=e_shipper_ruby
e_shipper_ruby is a gem to enable ruby applications to access the e-shipper XML API. If you use bundler, simply list it in your Gemfile, like so:

    gem 'e_shipper_ruby'

If you don't use bundler, install it by hand:

    gem install e_shipper_ruby

=Source

Source is available at github[https://github.com/HealthyWeb/e-shipper-ruby]

= Contributions

To contribute, fork this repo, make changes in your fork, then send a pull request.  No pull requests without accompanying tests will be accepted.  To run tests in your fork, just do

    bundle install
    rake

= Usage
== Initialization
When you create a Eshipper::Client object, you need to configure it with your username and password on the e-shipper server url (production or test).

You can configure your Client object with a username and password in one of several different ways:
=== Configuration from the environment
If configuration information is present in the environment, the new Client will take configuration information from there.

    export E_SHIPPER_USERNAME=demo
    export E_SHIPPER_PASSWORD=demo

Then

    client = EShipper::Client.new
    client.username     #=> demo
    client.password     #=> demo

=== Configuration from a YAML file
If you pass the name of a YAML file when you create a Client, the new Client will read the YAML file and take the username, password and server url values from there.

    # e_shipper.yml
    #
    ---
    username: demo
    password: demo

Then

    client = EShipper::Client.new("e_shipper.yml")
    client.username     #=> demo
    client.password     #=> demo

=== Configuration from a Hash
If you pass a hash when you create a Client, the new Client will take configuration information from that Hash.

    client = EShipper::Client.new :username => "demo", :password => "demo"
    client.username     #=> demo
    client.password     #=> demo

=== Configuration precedence
Configuration information present in the environment always takes precedence over that passed in via a YAML file or a Hash.

    export E_SHIPPER_USERNAME=demo
    export E_SHIPPER_PASSWORD=demo

Then

    client = EShipper::Client.new :username => "demo", :password => "demo"
    client.username     #=> demo
    client.password     #=> demo

=== Usage in an application deployed on Heroku
You can use the <tt>heroku config:add</tt> command to set environment variables:

    heroku config:add E_SHIPPER_USERNAME=demo
    heroku config:add E_SHIPPER_PASSWORD=demo

Then, when you create your client like:

    client = EShipper::Client.new

it will use the configuration information that you set with <tt>heroku config:add</tt>.

=== Connect to the e-shipper production API
Specify the <tt>:url</tt> option when creating your Client, e.g,

    EShipper::Client.new :url => "http://www.eshipper.com/rpc2", ...

When you using Rails, the url defaults to the test server unless you are running in production, in which case it will automatically defaults to the production server. So this url option is not required.

= License

This gem is licensed under the MIT License.
